(***************************************************************************************************************)
(******                       This is the FeynRules mod-file for the Unbroken Standard model              ******)
(******                                                                                                   ******)
(******     Authors: J. Santiago                                                                          ******)
(******                                                                                                   ******)
(****** Choose whether Feynman gauge is desired.                                                          ******)
(****** If set to False, unitary gauge is assumed.                                                          ****)
(****** Feynman gauge is especially useful for CalcHEP/CompHEP where the calculation is 10-100 times faster. ***)
(****** Feynman gauge is not supported in MadGraph and Sherpa.                                              ****)
(***************************************************************************************************************)

(* ************************** *)
(* *****  Information   ***** *)
(* ************************** *)
M$ModelName = "L6SM_2F_2S_1D";

M$Information = {
  Authors      -> {"J. Santiago"}, 
  Version      -> "1.0",
  Date         -> "9. 03. 2016",
  Institutions -> {"CAFPE and Universidad de Granada"},
  Emails       -> {"jsantiago@ugr.es"}
};

FeynmanGauge = True;


(* ************************** *)
(* *****   Parameters   ***** *)
(* ************************** *)
M$Parameters = {

  (* External parameters *)

  (* Internal Parameters *)

  	 
  alphaO19 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO20 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO21 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO22 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO23 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO24 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO25 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaO26 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },

  alphaR08 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaR09 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaR10 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaR11 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaR12 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaR13 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  },
  	 
  alphaR14 == { 
    ParameterType    -> Internal,
    Indices          -> {Index[Generation],Index[Generation]},
    ComplexParameter        -> True
  }

};


(* ************************** *)
(* *****   Lagrangian   ***** *)
(* ************************** *)

(* Recall that Ta=sigma/2 *)
(* We have a change of notation wrt HEL *)
Wvec[mu_,nu_,ii_,jj_]:= Module[{aa},2 Ta[aa,ii,jj] FS[Wi,mu,nu,aa]];
(* Define sigma[mu,nu]= I/2 [gamma(mu),gamma(nu)] *)
sigmamunu[mu_,nu_,sp_,sp2_]:=Module[{sp1},(I/2)*(Ga[mu,sp,sp1]*Ga[nu,sp1,sp2]-Ga[nu,sp,sp1]*Ga[mu,sp1,sp2])];

LF2S2D := Block[{lag,ff1,ff2,ii,mu,sp1,sp2,jj,ii2,jj2,aa,cc,lagnoh},
      lag= ExpandIndices[
           alphaO19[ff1,ff2]*I*(Phibar[ii]*DC[Phi[ii],mu]-DC[Phibar[ii],mu]*Phi[ii])*LLbar[sp1,jj,ff1].LL[sp2,jj,ff2] Ga[mu,sp1,sp2]
          +alphaO20[ff1,ff2]*I*(Phibar[ii]*2*Ta[aa,ii,ii2]*DC[Phi[ii2],mu]-DC[Phibar[ii],mu]*2*Ta[aa,ii,ii2]*Phi[ii2])*LLbar[sp1,jj,ff1].LL[sp2,jj2,ff2] 2 Ta[aa,jj,jj2]Ga[mu,sp1,sp2]
          +alphaO21[ff1,ff2]*I*(Phibar[ii]*DC[Phi[ii],mu]-DC[Phibar[ii],mu]*Phi[ii])*LRbar[sp1,ff1].LR[sp2,ff2] Ga[mu,sp1,sp2]
          +alphaO22[ff1,ff2]*I*(Phibar[ii]*DC[Phi[ii],mu]-DC[Phibar[ii],mu]*Phi[ii])*QLbar[sp1,jj,ff1,cc].QL[sp2,jj,ff2,cc] Ga[mu,sp1,sp2]
          +alphaO23[ff1,ff2]*I*(Phibar[ii]*2*Ta[aa,ii,ii2]*DC[Phi[ii2],mu]-DC[Phibar[ii],mu]*2*Ta[aa,ii,ii2]*Phi[ii2])*QLbar[sp1,jj,ff1,cc].QL[sp2,jj2,ff2,cc] 2 Ta[aa,jj,jj2]Ga[mu,sp1,sp2]
          +alphaO24[ff1,ff2]*I*(Phibar[ii]*DC[Phi[ii],mu]-DC[Phibar[ii],mu]*Phi[ii])*URbar[sp1,ff1,cc].UR[sp2,ff2,cc] Ga[mu,sp1,sp2]
          +alphaO25[ff1,ff2]*I*(Phibar[ii]*DC[Phi[ii],mu]-DC[Phibar[ii],mu]*Phi[ii])*DRbar[sp1,ff1,cc].DR[sp2,ff2,cc] Ga[mu,sp1,sp2]
          ,FlavorExpand->SU2D];
      lagnoh= ExpandIndices[
          alphaO26[ff1,ff2]*I*Phi[jj]*Eps[ii,jj]*DC[Phi[ii],mu]*URbar[sp1,ff1,cc].DR[sp2,ff2,cc] Ga[mu,sp1,sp2]
          +alphaR08[ff1,ff2]*I*Phibar[ii]*Phi[ii]*LLbar[sp1,jj,ff1].DC[LL[sp2,jj,ff2],mu] Ga[mu,sp1,sp2]
          +alphaR09[ff1,ff2]*I*Phibar[ii]*2*Ta[aa,ii,ii2]*Phi[ii2]*LLbar[sp1,jj,ff1].DC[LL[sp2,jj2,ff2],mu] 2 Ta[aa,jj,jj2] Ga[mu,sp1,sp2]
          +alphaR10[ff1,ff2]*I*Phibar[ii]*Phi[ii]*LRbar[sp1,ff1].DC[LR[sp2,ff2],mu] Ga[mu,sp1,sp2]
          +alphaR11[ff1,ff2]*I*Phibar[ii]*Phi[ii]*QLbar[sp1,jj,ff1,cc].DC[QL[sp2,jj,ff2,cc],mu] Ga[mu,sp1,sp2]
          +alphaR12[ff1,ff2]*I*Phibar[ii]*Phi[ii2]*2*Ta[aa,ii,ii2]*QLbar[sp1,jj,ff1,cc].DC[QL[sp2,jj2,ff2,cc],mu] 2 Ta[aa,jj,jj2] Ga[mu,sp1,sp2]
          +alphaR13[ff1,ff2]*I*Phibar[ii]*Phi[ii]*URbar[sp1,ff1,cc].DC[UR[sp2,ff2,cc],mu] Ga[mu,sp1,sp2]
          +alphaR14[ff1,ff2]*I*Phibar[ii]*Phi[ii]*DRbar[sp1,ff1,cc].DC[DR[sp2,ff2,cc],mu] Ga[mu,sp1,sp2]
          ,FlavorExpand->SU2D];
	  lag+lagnoh+HC[lagnoh]
];

Ltot:= LF2S2D;

